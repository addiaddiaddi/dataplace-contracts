// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console2} from "forge-std/Test.sol";
import {Marketplace} from "../src/Marketplace.sol";
import "../src/USDC.sol";
import "forge-std/console.sol";
contract RsaTest is Test {
    Marketplace marketplace; 
    uint256 public publicKey;
    uint256 public privateKey;
    uint256 public n;

    uint256 public terraPrivateKey = uint256(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80);
    address public terraAddress = 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266;
    address public seller = address(uint160(150));

    USDC public usdc;
    function setUp() public {
        usdc = new USDC();
        marketplace = new Marketplace(address(usdc), terraAddress);
        (publicKey, privateKey,n) = marketplace.getKeys();
        // publicKey = 3740835993;
        // privateKey = 1423449577;
        // n = 3928803607;
    }


    /// forge-config: default.fuzz.runs = 1000
    function testFuzz_rsa(uint256 message_) public {

        uint256 message = bound(message_,1, type(uint8).max);
        console.log("message", message);
        uint256 encrypted = marketplace.encrypt(message, publicKey, n);

        assertEq(marketplace.decrypt(encrypted, privateKey, n), message);
    }

    function test_recursiveExponent() external {
        require(marketplace.recursiveExponent(13, 88, 19) == 9, "marketplace.recursiveExponent(13, 88, 19) == 19");
        require(marketplace.recursiveExponent(13, 33, 59) == 54, "marketplace.recursiveExponent(13, 88, 19) == 19");
        require(marketplace.recursiveExponent(5885, 5835, 583) == 352, "marketplace.recursiveExponent(13, 88, 19) == 19");
    }

    function test_encryptDecryptBytes() external { 
        bytes memory data = abi.encodePacked(hex"7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d");
        // bytes memory data = abi.encodePacked(hex"7b2261223a20337d");
        // console.log("json data: ");
        // console.logBytes(data);
        // console.log(string(data));
        // console.log(data.length);

        // for (uint i; i < data.length; i++) {
        //     // console.logBytes1(data[i]);
        //     uint256 enc = marketplace.encrypt(uint8(data[i]), publicKey, n);
        //     uint256 unenc = marketplace.decrypt(enc, privateKey, n);
        //     console.log("value", i, uint8(data[i]), enc);
        // }

        uint256[] memory encryptedData = marketplace.encryptBytes(data, publicKey, n);

        assertEq(marketplace.decryptArray(encryptedData, privateKey, n), data);
    }

    function test_validateTerraSig() external {


        bytes memory data = abi.encodePacked(hex"7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d");
        
        (uint8 v, bytes32 r, bytes32 s) = vm.sign(terraPrivateKey, keccak256(data));

        require(marketplace.isTerraSignature(data, v, r, s) == true);

        (v, r, s) = vm.sign(terraPrivateKey - 1, keccak256(data));

        require(marketplace.isTerraSignature(data, v, r, s) == false);

    }

    function _createOrder() internal {
        usdc.mint(address(this), 100*10**18);
        usdc.approve(address(marketplace), 100*10**18);
        marketplace.createOrder("heartbeat", 100*10**18, publicKey, n);
    }

    function test_orderHappy() external {
        _createOrder();

        bytes memory data = abi.encodePacked(hex"7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d");
        
        (uint8 v, bytes32 r, bytes32 s) = vm.sign(terraPrivateKey, keccak256(data));

        vm.startPrank(seller);
            marketplace.fulfillOrder(0, v, r, s, keccak256(data), marketplace.encryptBytes(data, publicKey, n));
        vm.stopPrank();

        vm.expectRevert("hashes are equal. invalid dispute");
            marketplace.disputeOrder(0,83,23);

        vm.warp(block.timestamp + marketplace.disputePeriod() + 1);

        vm.prank(seller);
            marketplace.completeOrder(0);
        
        require(usdc.balanceOf(address(seller)) == 100*10**18, "usdc balance not 100");


        assertEq(marketplace.getUnencryptedPurchase(0, privateKey), data);
    }

    function test_orderHappyProd() external {
        _createOrder();

        bytes memory data = abi.encodePacked(hex"");
        
        (uint8 v, bytes32 r, bytes32 s) = vm.sign(terraPrivateKey, keccak256(data));

        console.log("data hash, v, r,s");
        console.logBytes32(keccak256(data));
        console.log(v);
        console.logBytes32(r);
        console.logBytes32(s);

        vm.startPrank(seller);
            marketplace.fulfillOrder(0, v, r, s, keccak256(data), marketplace.encryptBytes(data, publicKey, n));
        vm.stopPrank();

        vm.expectRevert("hashes are equal. invalid dispute");
            marketplace.disputeOrder(0,83,23);

        vm.warp(block.timestamp + marketplace.disputePeriod() + 1);

        vm.prank(seller);
            marketplace.completeOrder(0);
        
        require(usdc.balanceOf(address(seller)) == 100*10**18, "usdc balance not 100");


        assertEq(marketplace.getUnencryptedPurchase(0, privateKey), data);

    }
    function test_orderSadInvalidSig() external {
        _createOrder();

        bytes memory data = abi.encodePacked(hex"7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d");

        (uint8 v, bytes32 r, bytes32 s) = vm.sign(terraPrivateKey - 1, keccak256(data));

        uint256[] memory inp = marketplace.encryptBytes(data, publicKey, n);
        vm.startPrank(seller);
        vm.expectRevert("signature must be from terra address");
            marketplace.fulfillOrder(0, v, r, s, keccak256(data), inp );
    }

    function test_orderSadValidSig() external {
        _createOrder();

        bytes memory data = abi.encodePacked(hex"7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d");

        (uint8 v, bytes32 r, bytes32 s) = vm.sign(terraPrivateKey, keccak256(data));


        bytes memory inputData = abi.encodePacked(hex"6b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d");

        uint256[] memory inp = marketplace.encryptBytes(inputData, publicKey, n);
        vm.startPrank(seller);
            marketplace.fulfillOrder(0, v, r, s, keccak256(data), inp );

        
        marketplace.disputeOrder(0,83,23);

        require(usdc.balanceOf(address(this)) == 100*10**18);
    }

    function test_orderHappyBig() external {
        _createOrder();

        bytes memory data = abi.encodePacked(hex"7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d7b226e616d65223a20224a6f686e222c2022616765223a2033302c202263697479223a20224e657720596f726b227d");
        
        (uint8 v, bytes32 r, bytes32 s) = vm.sign(terraPrivateKey, keccak256(data));

        vm.startPrank(seller);
            marketplace.fulfillOrder(0, v, r, s, keccak256(data), marketplace.encryptBytes(data, publicKey, n));
        vm.stopPrank();

        vm.expectRevert("hashes are equal. invalid dispute");
            marketplace.disputeOrder(0,83,23);

        vm.warp(block.timestamp + marketplace.disputePeriod() + 1);

        vm.prank(seller);
            marketplace.completeOrder(0);
        
        require(usdc.balanceOf(address(seller)) == 100*10**18, "usdc balance not 100");


        assertEq(marketplace.getUnencryptedPurchase(0, privateKey), data);

    }
}
